import ipaddress
from dataclasses import field
from typing import List

from dataclasses_json import config, dataclass_json
from pydantic.dataclasses import dataclass

from anx_pyengine.models.location import Location
from anx_pyengine.models.public_vlan import PublicVLAN

from .util import PydanticConfig, ipaddr_to_json_encoder


@dataclass_json
@dataclass(config=PydanticConfig)
class PublicPrefix:
    prefix: ipaddress._BaseNetwork = field(
        metadata=config(encoder=ipaddr_to_json_encoder, decoder=ipaddress.ip_network)
    )

    identifier: str
    description_customer: str
    description_internal: str
    role_text: str
    status: str
    locations: List[Location]
    vlans: List[PublicVLAN]
    version: int
    netmask: int
    router_redundancy: bool
    prefix_type: int
