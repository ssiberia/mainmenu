import ipaddress
from dataclasses import field
from typing import List, Optional

from dataclasses_json import config, dataclass_json
from pydantic.dataclasses import dataclass

from .location import Location
from .util import PydanticConfig, ipaddr_to_json_encoder


@dataclass_json
@dataclass(config=PydanticConfig)
class Aggregate:
    identifier: str
    description: str
    locations: List[Location]
    customer_identifier: Optional[str]
    allocation_identifier: str
    rir_identifier: str
    rir_name: str
    vrf_identifier: str
    vrf_name: str
    prefix: ipaddress._BaseNetwork = field(
        metadata=config(encoder=ipaddr_to_json_encoder, decoder=ipaddress.ip_network)
    )
