import asyncio

from .engine import AbstractANXEngineAPI
from .models.location import Location


class EngineLocation(AbstractANXEngineAPI):
    def get(self, location_code: str) -> Location:
        """
        Get location object by location code (e.g. ANX01)
        Args:
            location_code: ANX location code (e.g. ANX01)
        Returns:
            location object
        """
        return asyncio.run(self._async_get(location_code))

    async def _async_get(self, location_code: str) -> Location:
        data = (
            await self.engine._api_get(
                f"/core/v1/location/by-code.json/{location_code}"
            )
        )[0]
        location = Location.from_dict(data)

        return location

    def get_by_identifier(self, location_identifier: str) -> Location:
        """
        Get location object by location identifier
        Args:
            location_identifier: the locations' identifier
        Returns:
            location object
        """
        return asyncio.run(self._async_get_by_identifier(location_identifier))

    async def _async_get_by_identifier(self, location_identifier: str) -> Location:
        data = (
            await self.engine._api_get(f"/core/v1/location.json/{location_identifier}")
        )[0]
        location = Location.from_dict(data)

        return location
